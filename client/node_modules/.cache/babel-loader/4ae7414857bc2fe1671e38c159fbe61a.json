{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/donny/Desktop/theLibray/client/src/pages/Saved.js\";\nimport React, { Component } from \"react\";\nimport SavedBooks from \"../components/saved/saved\";\nimport API from \"../utils/GoogleBook\";\nimport { promises } from \"fs\";\n\nclass Saved extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      result: [],\n      test: \"\"\n    };\n\n    this.deleteBook = e => {\n      let bookid = e.target.getAttribute(\"data-bookid\");\n      Promise.all([API.deleteBook(bookid)]).then(this.loadBooks()).catch(err => console.log(err));\n    };\n  }\n\n  loadBooks() {\n    API.getBooks().then(res => {\n      console.log(res);\n      this.setState({\n        result: res.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.result.map(item => /*#__PURE__*/_jsxDEV(SavedBooks, {\n        bookid: item._id,\n        title: item.title,\n        author: item.author,\n        description: item.description,\n        image: item.image,\n        link: item.link,\n        deleteBook: this.deleteBook\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Saved;","map":{"version":3,"sources":["/Users/donny/Desktop/theLibray/client/src/pages/Saved.js"],"names":["React","Component","SavedBooks","API","promises","Saved","state","result","test","deleteBook","e","bookid","target","getAttribute","Promise","all","then","loadBooks","catch","err","console","log","getBooks","res","setState","data","componentDidMount","render","map","item","_id","title","author","description","image","link"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEA,SAASC,QAAT,QAAyB,IAAzB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA6B;AAAA;AAAA;AAAA,SACzBK,KADyB,GACjB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,IAAI,EAAE;AAFF,KADiB;;AAAA,SAezBC,UAfyB,GAeXC,CAAD,IAAM;AACf,UAAIC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,aAAtB,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,CAACZ,GAAG,CAACM,UAAJ,CAAeE,MAAf,CAAD,CAAZ,EAAsCK,IAAtC,CAA2C,KAAKC,SAAL,EAA3C,EAECC,KAFD,CAEOC,GAAG,IAAGC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFb;AAGH,KApBwB;AAAA;;AAMzBF,EAAAA,SAAS,GAAE;AACPd,IAAAA,GAAG,CAACmB,QAAJ,GACCN,IADD,CACMO,GAAG,IAAE;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,WAAKC,QAAL,CAAc;AAACjB,QAAAA,MAAM,EAAEgB,GAAG,CAACE;AAAb,OAAd;AAAkC,KAHtC,EAICP,KAJD,CAIOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJd;AAMH;;AASDO,EAAAA,iBAAiB,GAAE;AACf,SAAKT,SAAL;AACH;;AAEAU,EAAAA,MAAM,GAAE;AACL,wBACI;AAAA,gBACK,KAAKrB,KAAL,CAAWC,MAAX,CAAkBqB,GAAlB,CAAsBC,IAAI,iBACvB,QAAC,UAAD;AAEA,QAAA,MAAM,EAAEA,IAAI,CAACC,GAFb;AAGA,QAAA,KAAK,EAAED,IAAI,CAACE,KAHZ;AAIA,QAAA,MAAM,EAAEF,IAAI,CAACG,MAJb;AAKA,QAAA,WAAW,EAAEH,IAAI,CAACI,WALlB;AAMA,QAAA,KAAK,EAAEJ,IAAI,CAACK,KANZ;AAOA,QAAA,IAAI,EAAEL,IAAI,CAACM,IAPX;AAQA,QAAA,UAAU,EAAE,KAAK1B;AARjB,SACKoB,IAAI,CAACC,GADV;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA3CwB;;AA+C7B,eAAezB,KAAf","sourcesContent":["import React, {Component} from \"react\";\nimport SavedBooks from \"../components/saved/saved\"\nimport API from \"../utils/GoogleBook\"\n\nimport { promises } from \"fs\";\n\nclass Saved extends Component{\n    state = {\n        result: [],\n        test: \"\"\n    }\n\n    loadBooks(){\n        API.getBooks()\n        .then(res=>{\n            console.log(res)\n            this.setState({result: res.data})})\n        .catch(err => console.log(err))\n\n    }\n\n    deleteBook = (e) =>{\n        let bookid = e.target.getAttribute(\"data-bookid\")\n        Promise.all([API.deleteBook(bookid)]).then(this.loadBooks())\n\n        .catch(err =>console.log(err))\n    }\n\n    componentDidMount(){\n        this.loadBooks()\n    }\n\n     render(){\n        return (\n            <div>\n                {this.state.result.map(item => (\n                    <SavedBooks\n                    key={item._id}\n                    bookid={item._id}\n                    title={item.title}\n                    author={item.author}\n                    description={item.description}\n                    image={item.image}\n                    link={item.link}\n                    deleteBook={this.deleteBook}\n                    />\n                ))}\n            </div>\n        )\n    }\n\n}\n\nexport default Saved;"]},"metadata":{},"sourceType":"module"}